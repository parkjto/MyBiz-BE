---
alwaysApply: false
---
## 2. /analyze API: 매장 검증 + 이미지 업로드 + OCR 처리

```
Node.js + Express 백엔드에서 다음 기능을 구현해줘.

- [POST] /analyze API
- 요청은 multipart/form-data, 이미지 여러 장('image' 필드) + storeName, storeAddress 포함 JSON 필드
- Supabase DB에서 요청 받은 storeName, storeAddress와 사용자 정보 조회 및 대소문자 무시, 공백 제거 후 비교
- 불일치 시 400 에러 + "매장 정보 불일치, 재입력 필요" 메시지 반환
- 일치 시 multer로 /uploads 폴더에 이미지 저장 (파일 개수 및 용량 제한 포함)
- 저장된 이미지 각각 Google Cloud Vision API OCR 처리 (services/ocrService.js에 OCR 호출 함수 구현 가정)
- OCR 결과 합친 텍스트 반환
- OCR 실패 시 500 에러 반환
- 네이버 리뷰 페이지 UI는 백엔드가 아닌 프론트에서 처리함을 명확히 주석으로 표기

routes/analyze.js와 services/ocrService.js 코드 작성해줘.
```

---

## 3. 감정 분석 + 결과 반환 + 에러 처리 미들웨어

```
Node.js + Express 백엔드에서 다음을 구현해줘.

- services/sentimentService.js에서 HuggingFace API 호출 (환경변수 HF_TOKEN 사용)
  * OCR 텍스트를 보내 감정 분석 수행
  * 긍정/부정 label과 score 반환
  * 간단한 긍정/부정 키워드 추출 로직 포함

- routes/analyze.js에서 OCR 결과를 받아 감정 분석 호출 후 JSON 응답 반환

- 에러 처리 미들웨어 작성
  * 400, 500 에러 구분해서 JSON 형태로 에러 메시지 반환
  * app.js에 미들웨어 등록하는 예시 포함

관련 코드 작성해줘.
```

---

